@inherits GridComponentBase<TItem>
@using Microsoft.AspNetCore.Components.Web.Virtualization
@typeparam TItem

<tbody>
    <CascadingValue Name="Rows" Value="@(this)" IsFixed="true">
        @if (CascadingContext.Grid is {Items: not null} grid)
        {
            if (grid.Registry.TryGetComponent<GridRowsVirtualizeOptions<TItem>>(out var virtualizer))
            {
                <Virtualize @ref="@_virtualizeComponent" Context="item"
                            ItemsProvider="@GetVirtualizedItems"
                            ItemSize="@virtualizer.ItemSize"
                            OverscanCount="@virtualizer.OverscanCount"
                            SpacerElement="@virtualizer.SpacerElement">
                    @RenderGridRow(item)
                </Virtualize>
            }
            else
            {
                foreach (var item in _currentNonVirtualizedViewItems)
                {
                    @RenderGridRow(item)
                }
            }
        }
        @if (ChildContent is not null)
        {
            @ChildContent
        }
    </CascadingValue>
</tbody>

@code {

    private RenderFragment RenderGridRow(TItem? item)
        => RowTemplate is not null
            ? RowTemplate(item)
            : @<GridRow TItem="TItem"
                        Item="item"
                        EditState="EditState"
                        @key="item" />;

}